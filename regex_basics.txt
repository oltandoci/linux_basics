Expressions Régulières (regex)
https://www.regular-expressions.info
http://www.expreg.com
https://www.gnu.org/software/sed/manual/html_node/sed-scripts.html#sed-scripts
------------------------------------------------------------------------

Une des premières choses à réaliser dans la conception d'une expression régulière, c'est de définir le motif (pattern en anglais)
Pour construire ces motifs, vous avez besoin de créer une structure formée de caractères littéraux, puis de symboles qui sont définis 
en tant que métacaractères et délimiteurs et qui seront utilisés séparément ou en combinaison à l'intérieur d'un même groupement ou d'une classe.

1. On appelle littéral une valeur qui est écrite exactement comme elle est interprétée:
abc : La chaîne contient "abc"

2. Le caractère \ ("antislash" ou "backslash") indique que le caractère qui suit doit être recherché en tant que tel:
\.  : permet de rechercher le caractère point .

3. Les modificateurs les plus utilisés:
i   : fait une recherche insensible à la case
g   : fait une recherche globale (trouve toutes les occurrences au lieu de s'arrêter après le 1ère)
m   : fait une recherche multiligne

4. Les métacaractères les plus utilisés:
\t  : trouve une tabulation
\r  : Line feed code.
\d  : trouve un chiffre
\s  : trouve un espace
\b  : trouve une chaîne spécifiée au début (\bWORD) ou à la fin (WORD\b)
\uxxxx  : trouve le caractère ASCII spécifié en hexa par le nombre xxxx

5. Les symboles quantificateurs:
+  : recherche une ou plusieurs occurrences du caractère ou de la classe précédente
*  : recherche zéro ou plusieurs occurrences du caractère ou de la classe précédente
?  : recherche zéro ou une seule occurrence du caractère ou de la classe précédente

6. Les symboles de début et fin de chaîne, le point et l'alternative:
^   : ce qui suit doit être au début d'une ligne (^chat reconnaît une ligne qui commence par chat)
$   : ce qui précède doit être à la fin d'une ligne (chat$ reconnaît une ligne qui finit par chat)
.   : indique n'importe quel caractère
|   : alternative - ou reconnaît l'un ou l'autre

7. Les classes de caractères:
[a-z]   : rechercher n'importe quelle lettre de l'alphabet en minuscules
[A-Z]   : rechercher n'importe quelle lettre de l'alphabet en majuscules
[0-9]   : rechercher tous les chiffres de 0 à 9
[abc]   : La chaîne contient soit "a", soit "b", soit "c"
br[iu]n : ce qui signifie, trouver br suivi de i ou de u suivi de n comme brun ou brin
[^abc]  : classe complémentée ce qui signifie que la chaîne ne contient ni "a", ni "b", ni "c"
[^1]    : classe complémentée ce qui signifie reconnaître tout sauf ce qui est énuméré, ici, tout sauf le chiffre 1
[^1-6]  : classe complémentée ce qui signifie reconnaître tout sauf ce qui est énuméré, ici, tout sauf les chiffres de 1 à 6
PS: Le tiret représente l'intervalle à l'intérieur de la classe
Il s'agit d'un métacaractère s'il est placé dans cette position. 
S'il faut faire une recherche de - alors il faut le considérer comme un caractère spécial.
En tout ils sont 4 caractères spéciaux:
], \, ^, -
Il faut les précéder d'un backslash (pour \ on utilise 2 si l'expression est comprise entre '', ou 4 si l'expression est comprise entre "") ou utiliser les motifs suivants:
'[\\x]' ou "[\\\\x]" matches a backslash or an x
[x^] matches an x or a caret
[]x] matches a closing bracket or an x
[^]x] matches any character that is not a closing bracket or an x (does not work in JavaScript)
[-x] and [x-] match an x or a hyphen.
[^-x] and [^x-] match any character that is not an x or a hyphen
Pour le reste, il n'y a pas de problèmes, on fait une recherche directe:
[*+.] search for a star or plus or a point

8. Les intervalles de reconnaissance:
a{3}            : correspond exactement à aaa
a{2,}           : correspond à un minimum de deux a consécutifs, soit aa, aaa, aaaaa....
a{2,4}          : correspond uniquement à aa, aaa, aaaa

9. Les groupements des expressions (limiter la portée d'un masque ou de l'alternative):
(expr)          : La chaîne vaut "expr"
(expr1|expr2)   : La chaîne vaut "expr1" ou "expr2"
p(ai|i)n        : la barre verticale détermine une alternative ce qui signifie tout ce qui s'écrit pain ou pin
^(De|A):@       : détermine une alternative dans le motif ce qui signifie tout ce qui commence par De:@ ou A:@

10. Les classes pré-définies:
[[:alpha:]]     : n'importe quelle lettre
[[:digit:]]     : n'importe quel chiffre
[[:xdigit:]]    : caractères héxadécimaux
[[:alnum:]]     : n'importe quelle lettre ou chiffre
[[:space:]]     : n'importe quel espace blanc
[[:punct:]]     : n'importe quel signe de ponctuation
[[:lower:]]     : n'importe quelle lettre en minuscule
[[:upper:]]     : n'importe quelle lettre capitale
[[:blank:]]     : espace ou tabulation
[[:graph:]]     : caractères affichables et imprimables
[[:cntrl:]]     : caractères d'échappement
[[:print:]]     : caractères imprimables exceptés ceux de contrôle

Exercice 1: trouver la signification des patterns suivants:
[a-zA-Z]    : La chaîne contient n'importe quelle lettre de l'alphabet en minuscules ou en majuscules
[$\u20AC]   : La chaîne contient le dollar ou l'euro
a.c         : La chaîne contient "a" suivi d'un caractère (n'importe lequel) suivi de "c"
a\.c        : La chaîne contient "a.c"
a.+c        : La chaîne contient "a" suivi d'un ou plusieurs caractères (n'importe lesquels) suivi de "c"
a.*c        : La chaîne contient "a" suivi de zéro ou plusieurs caractères (n'importe lesquels) suivi de "c"
a.?c        : La chaîne contient "a" suivi de zéro ou un seul caractère (n'importe lesquel) suivi de "c"

Exercice 2: trouver une adresse mail de la forme xxx@yyy.zzz
pattern = ".+@.+\..+"
-Le caractère point "." permet de remplacer n'importe quel caractère
-Le caractère + permet de rechercher une ou plusieurs occurrences de l'expression qui le précède
-Le cractère @ doit être présent
-Le caractère \. indique que le caractère qui suit le backslash, ici le point "." doit être recherché en tant que tel

Exercice 3: trouver une adresse IPv4 de la forme xxx.yyy.zzz.www
pattern = "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
-Le motif [0-9] permet de rechercher n'importe quel chiffre entre 0 et 9
-La reconnaissance {1,3} permet de rechercher une, deux ou trois occurrences de l'expression qui le précède
-L'antislash suivi du caractère point \. permet de rechercher le caractère point "." (comme pour l'adresse mail)
